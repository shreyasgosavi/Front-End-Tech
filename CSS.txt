CSS

Different Methods to style the page.
	1. External CSS		3. Inline-CSS
	2. Internal CSS


Different ways to catch the elements :
	1. Element Selector	3. Id Selector
	2. Class Selector


Terms	:  Specificity, Inheritance 
	
Note 	:
	The cross mark while inspecting the element is basically the design that are over-
ridden by some other design due to specificity or cascading reason.

	Color-paletts  : coolors.com


Units and Sizes :

	Determines the size of the objects in the page. 
	
	Categories of Sizes :
		1. Absolute Size	2. Relative Size
		
		1. Absolute Size : The size of the text remains the same even thought we
			try to change the browser settings or changing the window size.
			Eg : px

		2. Relative Size : The size of the object is relative to its parent node.
			Eg : 
				%	<--	Percent related to the parent element.	
				rem	<-- 	Size-Relative to the root element.
						(Generally used for font-size)

				em	<--	Size-Relative to the parent element.
						(Used for specifying margin-padding prop.) 

				ch	<--	Width based-on the character size.
	
	For absolute size the most widely used unit is px, default size in the browser is 
	16px.


CSS Box-Model :

	Everything in css are boxes, arrangement of those elements is very useful.
	CSS Box-model has several components namely : content, padding, border and margin.
	
	By-default browser assigns some value to the components which might result in 
	inconsistency in future (using rem can lead to unexpected results), hence it is
	necessary to reset the CSS components value and take control of them.

	Like this :
		*{
			margin:0;
			padding:0;
			box-sizing: border-box;
		}
	
	--------------------------------------------------------------------------------------------------------

	Note : 	box-sizing specifies how the over-all size of the program will be calculated.
		Default value is content-box which means what-ever value of the component
		we specify it just applies it to the content only the value of padding,
		margin is not taken into account.	
	
	--------------------------------------------------------------------------------------------------------


	Outline tag is used to cover the end of the boundries.


Typography :

	It is the way in which the text is arranged and presented. 
	We can change the properties of the text like the font, spacing between the words,
	letters, etc. 	
	
	Several css properties are there that make such changes possible eg :

		font-size, font-family, text-align, text-decoration, letter-spacing, etc.
		

		
Styling Links :
	
	Links are contained in the anchor tag in which the href attribute links to the page
	where we wanted	to visit. Like other properties, some properties of links are set by 
	the browser by default.
	
	Eg:	text-decoration is underline, color is blue, cursor is pointer.

	Links have multiple states and state-related attributes that help identify them.
	States of the links are : visited, hover, un-visited.

	Those properties can be specified with the help of the pseudo-classes specified by
	":" after the attribute-name.
	
	Eg: 	a:hover{

			color:dodgerblue;	
		}

		


	Note : The order of writing the preprocessors is also important, proper ordering of
	several events :

	a{} ; a:visited; a:Hover


Display :
	
	Display property defines how much space does the element in the page takes 
	
	There are two major display properties they are inline and block level elements.

	Inline-level elements are the one that takes only required space for an object.
	Block-level elements take the entire width by default. Multiple block-level elements 
	stack-on each other.
	
	We can change the properties like margin, padding, etc of the block-level elements
	but not all those properties of the inline-level elements can be changed.

	Margin property of the inline element is not affected, but we can add padding to the
	element.

	--------------------------------------------------------------------------------------
	
	Note : 
	   Why margin-top and margin-bottom property of inline elements remains unchanged?
	-->	Top and bottom margins do not affect inline elements because inline elements flow 
		with content on the page. You can set left and right margins/padding on an inline 
		element but not top or bottom because it would disrupt the flow of content. You 
		can set margins on block (or inline-block but it will only look right if you set 
		the vertical align right) because block level elements disrupt the flow of 
		content.

	--------------------------------------------------------------------------------------
	
Css Float :
	
	Float is the property of the element that breaks the normal flow of the page and makes the
	rest of the content wrap-around it either left-or-right depending upon the value specified 
	in the float property.
	
	One application of float concept property is the arrangement of image and text. As mentioned 
	earlier float breaks the flow of the page and hence making changes to the property of the
	other component may affect the overall DOM of the page.

	EG : 

CSS columns :
	
	Column property helps to split the content into seperate columns.The property is specified
	inside the container by giving the count of column (column-count).
	Other properties like the width, rule can be specified.

	Some-times case may arise in which an element might break into another column, meaning
	some parts of the element goes into another column. To avoid that we make use of the 
	"break-inside" property and set in to avoid.

	container{
		column-count:4;
		column-width:200px;
		break-inside: avoid;
	}


Position :	Revision required.
	
	This property specifies how the element is placed in the document with respect to its
	ancestor based on the value specified. Determines the flow of the page. By default the
	value is "static".

	Different Values of position property :
		Static, Absolute, Relative, fixed, sticky.

	
















